openapi: 3.0.0
info:
  title: Authentication API
  description: Authentication endpoints for the application
  version: 1.0.0

tags:
  - name: Authentication
    description: Authentication operations

paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticate user and return JWT token
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 5f7d8e1d9b8c7d6e5f4d3c2b
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: user
                      isActive:
                        type: boolean
                        example: true
                      lastLogin:
                        type: string
                        format: date-time
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Please provide email and password
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Invalid credentials
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Your account has been deactivated. Please contact an administrator.

  /api/auth/logout:
    get:
      tags:
        - Authentication
      summary: Logout user
      description: Clear authentication token cookie
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User logged out successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Not authorized to access this route

  /api/auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Get details of the currently authenticated user
      operationId: getMe
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 5f7d8e1d9b8c7d6e5f4d3c2b
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: user
                      isActive:
                        type: boolean
                        example: true
                      lastLogin:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Not authorized to access this route

  /api/auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Forgot password
      description: Send password reset token to user email
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Reset token sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Email sent
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Email could not be sent

  /api/auth/reset-password/{resetToken}:
    put:
      tags:
        - Authentication
      summary: Reset password
      description: Reset user password using reset token
      operationId: resetPassword
      parameters:
        - name: resetToken
          in: path
          required: true
          description: Password reset token
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset successful
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Invalid or expired token

  /api/auth/change-password:
    put:
      tags:
        - Authentication
      summary: Change password
      description: Change password for authenticated user
      operationId: changePassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                  example: currentpassword123
                newPassword:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password updated successfully
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Current password is incorrect
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: User not found

  /api/auth/block/{id}:
    put:
      tags:
        - Authentication
      summary: Block user
      description: Block a user (admin only)
      operationId: blockUser
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID to block
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  example: Violation of terms of service
      responses:
        '200':
          description: User blocked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User has been blocked successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: You cannot block yourself
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: You cannot block an admin user
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: User not found

  /api/auth/unblock/{id}:
    put:
      tags:
        - Authentication
      summary: Unblock user
      description: Unblock a user (admin only)
      operationId: unblockUser
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID to unblock
          schema:
            type: string
      responses:
        '200':
          description: User unblocked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User has been unblocked successfully
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Not authorized to access this route
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: User not found

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 5f7d8e1d9b8c7d6e5f4d3c2b
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: user@example.com
        role:
          type: string
          enum: [user, admin]
          example: user
        isActive:
          type: boolean
          example: true
        lastLogin:
          type: string
          format: date-time